name: 'Setup LXD'
description: 'Install and configure LXD on the runner'
inputs:
  channel:
    description: 'Snap channel to install LXD from'
    required: false
    default: 'latest/stable'
  refresh:
    description: 'Refresh installed LXD from SNAP'
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:

    - name: Install LXD snap
      shell: bash
      run: |
        set -x
        if [ "$(dpkg-query -f "\${db:Status-Status} \${db:Status-Eflag}" -W lxd 2>/dev/null)" = "installed ok" ]; then
          echo "LXD has been installed from package already."

        elif snap info lxd | grep "^installed"; then
          echo "LXD has been installed from SNAP already."

          if ( "${{ inputs.refresh }}" == "true" ) ; then
            echo "Updating LXD from SNAP (channel=${{ inputs.channel }})"
            sudo snap refresh lxd --channel=${{ inputs.channel }}
          else
            echo "Skipping LXD update from SNAP (due to refresh=${{ inputs.refresh }})"
          fi

        elif which lxd; then
          echo "LXD is locally available (installed from sources)."

        else
          echo "LXD is missing, installing from SNAP (channel=${{ inputs.channel }})."
          sudo snap install lxd --channel=${{ inputs.channel }}
        fi

    - name: Initialise LXD
      shell: bash
      run: |
        sudo lxd waitready
        sudo lxd init --auto

    - name: Set up permissions for socket
      shell: bash
      run: |
        sudo snap set lxd daemon.group=adm
        sudo snap restart lxd

    - name: Configure firewall
      shell: bash
      run: |
        set -x
        sudo iptables -I DOCKER-USER -i lxdbr0 -j ACCEPT
        sudo iptables -I DOCKER-USER -o lxdbr0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
